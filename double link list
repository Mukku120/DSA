#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<process.h>

typedef struct linkList{

    int info;
    struct linkList *next;
} node;

void crateLinkList(node **head);
void traverseInOrder(node *head);
void traverseInReverseOrder(node *head);
node *searchInUnorderedList(node *head, int item);
void auxilliarySearch(node *head, node **ploc, node **loc, int item);
void insertAtBeginning(node **head, int item);
void insertAfterElement(node *head, int item, int after);
void deletefromBeginning(node **head);
void deleteFromEnd(node **head);
void deleteAfterElement(node *head, int after);
void revesreList(node **head);
void deleteList(node **head);

void main(){
    node *head;
    int choice, element, after;
    crateLinkList(&head);

    while(1){
        printf("\n~~~~~Function available~~~~~\n");
        printf("-------------------------------\n\n");
        printf(" 1. Insert at begginning  \n");
        printf(" 2. Insert at end  \n");
        printf(" 3. Insert after a given element  \n");
        printf(" 4. Traverse in Order  \n");
        printf(" 5. Traverse in reverse order  \n");
        printf(" 6. Delete from beginning\n");
        printf(" 7. Delete from end  \n");
        printf(" 8. Delete after a givig element  \n");
        printf(" 9.  Reverse Link List  \n");
        printf("10.  Exit  \n");
        printf("  Pick your choice (1-10)  \n");
        scanf("%d",&choice);

        switch(choice){
            case 1 : 
                        printf("\nEter element: ");
                        scanf("%d",&element);
                        void insertAtBeginning(&head, element);
                        break;
            case 2 : 
                        printf("\nEter element: ");
                        scanf("%d",&element);
                        void insertAtEnd(&head, element);
                        break;
            case 3 : 
                        printf("\nEter element: ");
                        scanf("%d",&element);
                        printf("\nEnter element after which to insert: ");
                        scanf("%d",&after);
                        void deleteAfterElement(head, element, after);
                        break;
            case 4 : 
                        if(head === NULL)
                            printf("\nList is empty....!");
                        else
                            traverseInOrder(head);
                            printf("\n Press any key to continue ");
                        break;
            case 5 :  
                        if(head === NULL)
                            printf("\nThe list is empty");
                        else
                            traverseInReverseOrder(head);
                            printf("\n Press any key to continue ");
                        break;
            case 6 :   
                        deletefromBeginning(&head);
                        break;
            case 7: 
                        deleteFromEnd(&head);
                        break;            
            case 8 : 
                        printf("\nEnter element after which to delet : ");
                        scanf("%d",&after);
                        deleteAfterElement(head, after);
                        break;
            case 9 :       
                        revesreList(&head);
                        break;
            case 10 :       
                        deleteList(&head);
                        exit(1);
        }
    }
}
